2024-01-05 22:01:36,866{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin /Users/mohamed.elzien/go/bin/maelstrom-echo --node-count 1 --time-limit 10
2024-01-05 22:01:36,917{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x527e6bd3"
         "maelstrom.db$db$reify__16142@527e6bd3"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x3c634a04" "2024-01-05T22:01:36.833+02:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x4b48be5c"
         "maelstrom.net$jepsen_net$reify__15251@4b48be5c"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x3fe8d57a"
         "maelstrom.workload.echo$client$reify__16863@3fe8d57a"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x36573ec5"
         "java.util.concurrent.CyclicBarrier@36573ec5"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x10c26161"
         "jepsen.checker$compose$reify__11881@10c26161"]
 :argv
 ("test"
  "-w"
  "echo"
  "--bin"
  "/Users/mohamed.elzien/go/bin/maelstrom-echo"
  "--node-count"
  "1"
  "--time-limit"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@1ef6977b"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@674cd2da"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/mohamed.elzien/go/bin/maelstrom-echo"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 10000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x34d776eb"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@34d776eb"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x60a3a0fa"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@60a3a0fa"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x17734113"
                                                    "maelstrom.workload.echo$workload$fn__16882@17734113"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x27aa700"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0xd15f98a"
         "maelstrom.net$jepsen_os$reify__15254@d15f98a"]
 :time-limit 10
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-01-05 22:01:37,958{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-01-05 22:01:37,959{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-01-05 22:01:37,960{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-01-05 22:01:37,962{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-01-05 22:01:37,963{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-01-05 22:01:37,963{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/mohamed.elzien/go/bin/maelstrom-echo []
2024-01-05 22:01:37,983{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-01-05 22:01:37,992{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 20"
2024-01-05 22:01:37,996{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 20", :in_reply_to 1, :msg_id 1, :type "echo_ok"}
2024-01-05 22:01:38,229{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 71"
2024-01-05 22:01:38,231{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 71", :in_reply_to 2, :msg_id 2, :type "echo_ok"}
2024-01-05 22:01:38,261{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 3"
2024-01-05 22:01:38,262{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 3", :in_reply_to 3, :msg_id 3, :type "echo_ok"}
2024-01-05 22:01:38,363{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 112"
2024-01-05 22:01:38,367{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 112", :in_reply_to 4, :msg_id 4, :type "echo_ok"}
2024-01-05 22:01:38,481{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 89"
2024-01-05 22:01:38,483{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 89", :in_reply_to 5, :msg_id 5, :type "echo_ok"}
2024-01-05 22:01:38,612{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 120"
2024-01-05 22:01:38,616{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 120", :in_reply_to 6, :msg_id 6, :type "echo_ok"}
2024-01-05 22:01:38,775{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 56"
2024-01-05 22:01:38,781{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 56", :in_reply_to 7, :msg_id 7, :type "echo_ok"}
2024-01-05 22:01:39,008{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 1"
2024-01-05 22:01:39,010{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 1", :in_reply_to 8, :msg_id 8, :type "echo_ok"}
2024-01-05 22:01:39,096{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 21"
2024-01-05 22:01:39,098{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 21", :in_reply_to 9, :msg_id 9, :type "echo_ok"}
2024-01-05 22:01:39,491{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 117"
2024-01-05 22:01:39,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 117", :in_reply_to 10, :msg_id 10, :type "echo_ok"}
2024-01-05 22:01:39,803{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 75"
2024-01-05 22:01:39,806{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 75", :in_reply_to 11, :msg_id 11, :type "echo_ok"}
2024-01-05 22:01:40,139{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 89"
2024-01-05 22:01:40,143{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 89", :in_reply_to 12, :msg_id 12, :type "echo_ok"}
2024-01-05 22:01:40,172{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 94"
2024-01-05 22:01:40,173{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 94", :in_reply_to 13, :msg_id 13, :type "echo_ok"}
2024-01-05 22:01:40,224{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 52"
2024-01-05 22:01:40,225{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 52", :in_reply_to 14, :msg_id 14, :type "echo_ok"}
2024-01-05 22:01:40,340{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 87"
2024-01-05 22:01:40,342{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 87", :in_reply_to 15, :msg_id 15, :type "echo_ok"}
2024-01-05 22:01:40,629{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 26"
2024-01-05 22:01:40,631{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 26", :in_reply_to 16, :msg_id 16, :type "echo_ok"}
2024-01-05 22:01:40,672{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 79"
2024-01-05 22:01:40,673{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 79", :in_reply_to 17, :msg_id 17, :type "echo_ok"}
2024-01-05 22:01:40,972{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 92"
2024-01-05 22:01:40,975{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 92", :in_reply_to 18, :msg_id 18, :type "echo_ok"}
2024-01-05 22:01:41,257{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 118"
2024-01-05 22:01:41,260{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 118", :in_reply_to 19, :msg_id 19, :type "echo_ok"}
2024-01-05 22:01:41,395{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 3"
2024-01-05 22:01:41,397{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 3", :in_reply_to 20, :msg_id 20, :type "echo_ok"}
2024-01-05 22:01:41,592{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 53"
2024-01-05 22:01:41,594{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 53", :in_reply_to 21, :msg_id 21, :type "echo_ok"}
2024-01-05 22:01:41,679{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 68"
2024-01-05 22:01:41,680{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 68", :in_reply_to 22, :msg_id 22, :type "echo_ok"}
2024-01-05 22:01:41,770{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 91"
2024-01-05 22:01:41,771{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 91", :in_reply_to 23, :msg_id 23, :type "echo_ok"}
2024-01-05 22:01:42,138{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 104"
2024-01-05 22:01:42,141{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 104", :in_reply_to 24, :msg_id 24, :type "echo_ok"}
2024-01-05 22:01:42,345{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:echo	"Please echo 39"
2024-01-05 22:01:42,349{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:echo	{:echo "Please echo 39", :in_reply_to 25, :msg_id 25, :type "echo_ok"}
2024-01-05 22:01:42,680{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
